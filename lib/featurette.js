// Generated by CoffeeScript 1.8.0
(function() {
  var Featurette;

  Featurette = (function() {
    function Featurette() {}

    Featurette.version = "1.2.0";

    Featurette.registered_features = {};

    Featurette.featurettes_counter = 0;

    Featurette.register = function(name, klass) {
      return this.registered_features[name] = klass;
    };

    Featurette.load = function() {
      var element, elements, elementsNeedingLoad, featurette, featurettes, id, klass, obj, _i, _j, _len, _len1, _results;
      elementsNeedingLoad = document.querySelectorAll("[data-featurette]");
      elements = [];
      for (_i = 0, _len = elementsNeedingLoad.length; _i < _len; _i++) {
        element = elementsNeedingLoad[_i];
        if (!(element.featuretteLoading || element.featurette)) {
          elements.push(element);
          element.featuretteLoading = true;
        }
      }
      _results = [];
      for (_j = 0, _len1 = elements.length; _j < _len1; _j++) {
        element = elements[_j];
        element.featurettes = [];
        featurettes = element.getAttribute("data-featurette");
        featurettes = featurettes.split(" ");
        _results.push((function() {
          var _k, _len2, _results1;
          _results1 = [];
          for (_k = 0, _len2 = featurettes.length; _k < _len2; _k++) {
            featurette = featurettes[_k];
            klass = this.registered_features[featurette];
            if (klass) {
              id = element.id;
              if ((id == null) || id === "") {
                id = "featurette-" + this.featurettes_counter;
                element.id = id;
              }
              obj = new klass(element);
              element.featurettes.push(obj);
              _results1.push(this.featurettes_counter += 1);
            } else {
              if (window.console) {
                _results1.push(console.log("Unknown featurette " + featurette));
              } else {
                _results1.push(void 0);
              }
            }
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Featurette.get = function(id, params) {
      var element;
      element = document.getElementById(id);
      if (element != null) {
        if (params) {
          return element.featurettes[params.index] || console.log("Incorrect params");
        } else {
          return element.featurettes[0];
        }
      }
    };

    return Featurette;

  })();

  window.Featurette = Featurette;

}).call(this);
